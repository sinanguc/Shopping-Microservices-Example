services:
  basket.api:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: Services/Basket/Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: basketdb:6379
      ElasticConfiguration:Uri: http://elasticsearch:9200
      EventBusSettings:HostAddress: amqp://guest:guest@rabbitmq:5672
      GrpcSettings:DiscountUrl: http://discount.grpc
    image: basketapi
    ports:
    - published: 8001
      target: 80
  basketdb:
    container_name: basketdb
    image: redis:alpine
    ports:
    - published: 6379
      target: 6379
    restart: always
  catalog.api:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: catalogapi
    ports:
    - published: 8000
      target: 80
  catalogdb:
    container_name: catalogdb
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - mongo_data:/data/db:rw
  discount.api:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: Services/Discount/Discount.API/Dockerfile
    container_name: discount.api
    depends_on:
      discountdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=discountdb;Port=5432;Database=DiscountDb;User
        Id=admin;Password=admin1234;
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: discountapi
    ports:
    - published: 8002
      target: 80
  discount.grpc:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    container_name: discount.grpc
    depends_on:
      discountdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=discountdb;Port=5432;Database=DiscountDb;User
        Id=admin;Password=admin1234;
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: discountgrpc
    ports:
    - published: 8003
      target: 80
  discountdb:
    container_name: discountdb
    environment:
      POSTGRES_DB: DiscountDb
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER: admin
    image: postgres
    ports:
    - published: 5432
      target: 5432
    restart: always
    volumes:
    - postgres_data:/var/lib/postgresql/data/:rw
  elasticsearch:
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      xpack.monitoring.enabled: "true"
      xpack.watcher.enabled: "false"
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    ports:
    - published: 9200
      target: 9200
    volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data:rw
  kibana:
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_started
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
    - published: 5601
      target: 5601
  ocelotapigateway:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: ApiGateways/OcelotApiGateway/Dockerfile
    container_name: ocelotapigateway
    depends_on:
      basket.api:
        condition: service_started
      catalog.api:
        condition: service_started
      discount.api:
        condition: service_started
      ordering.api:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: ocelotapigateway
    ports:
    - published: 8010
      target: 80
  orderdb:
    container_name: orderdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Sinan12345678
    image: mcr.microsoft.com/mssql/server:2017-latest
    ports:
    - published: 4801
      target: 1433
    restart: always
  ordering.api:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    container_name: ordering.api
    depends_on:
      orderdb:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings:OrderingConnectionString: Server=orderdb;Database=OrderDb;User
        Id=sa;Password=Sinan12345678
      ElasticConfiguration:Uri: http://elasticsearch:9200
      EventBusSettings:HostAddress: amqp://guest:guest@rabbitmq:5672
    image: orderingapi
    ports:
    - published: 8004
      target: 80
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@shopping.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    image: dpage/pgadmin4
    ports:
    - published: 5050
      target: 80
    restart: always
    volumes:
    - pgadmin_data:/root/.pgadmin:rw
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    ports:
    - published: 8080
      target: 8000
    - published: 9000
      target: 9000
    restart: always
    volumes:
    - portainer_data:/data:rw
    - /var/run/docker.sock:/var/run/docker.sock:rw
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
    - published: 5672
      target: 5672
    - published: 15672
      target: 15672
    restart: always
  shopping.aggregator:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile
    container_name: shopping.aggregator
    depends_on:
      basket.api:
        condition: service_started
      catalog.api:
        condition: service_started
      ordering.api:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApiSettings:BasketUrl: http://basket.api
      ApiSettings:CatalogUrl: http://catalog.api
      ApiSettings:OrderingUrl: http://ordering.api
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: shoppingaggregator
    ports:
    - published: 8005
      target: 80
  webstatus:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: WebApps/WebStatus/Dockerfile
    container_name: webstatus
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      HealthChecksUI__HealthChecks__0__Name: Catalog Health Check
      HealthChecksUI__HealthChecks__0__Uri: http://catalog.api/hc
      HealthChecksUI__HealthChecks__1__Name: Basket Health Check
      HealthChecksUI__HealthChecks__1__Uri: http://basket.api/hc
      HealthChecksUI__HealthChecks__2__Name: Discount Health Check
      HealthChecksUI__HealthChecks__2__Uri: http://discount.api/hc
      HealthChecksUI__HealthChecks__3__Name: Ordering Health Check
      HealthChecksUI__HealthChecks__3__Uri: http://ordering.api/hc
      HealthChecksUI__HealthChecks__4__Name: Shopping Aggregator Health Check
      HealthChecksUI__HealthChecks__4__Uri: http://shopping.aggregator/hc
      HealthChecksUI__HealthChecks__5__Name: AspnetRunBasics WebMVC Health Check
      HealthChecksUI__HealthChecks__5__Uri: http://aspnetrunbasics/hc
    image: webstatus
    ports:
    - published: 8007
      target: 80
  webui:
    build:
      context: C:\Users\Sinan\source\repos\ShoppingMicroservices\src
      dockerfile: WebApps/WebUI/Dockerfile
    container_name: webui
    depends_on:
      basket.api:
        condition: service_started
      catalog.api:
        condition: service_started
      discount.api:
        condition: service_started
      ocelotapigateway:
        condition: service_started
      ordering.api:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApiSettings:GatewayAddress: http://ocelotapigateway
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: webui
    ports:
    - published: 8006
      target: 80
version: '3.4'
volumes:
  elasticsearch-data: {}
  mongo_data: {}
  pgadmin_data: {}
  portainer_data: {}
  postgres_data: {}